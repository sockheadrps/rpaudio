name: Release to PyPI

on:
  push:
    branches:
      - main

jobs:
  build-for-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: x64

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          manylinux: auto
          args: --release --out dist
          before-script-linux: |
            yum install -y alsa-lib-devel pkgconfig alsa-utils

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-x86_64
          path: dist/

  mock-audio-and-run-tests:
    runs-on: ubuntu-latest
    needs: build-for-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-x86_64
          path: ./dist

      - name: Install audio packages
        run: |
          sudo apt-get update
          sudo apt-get install -y pulseaudio pulseaudio-utils jackd2 alsa-utils dbus-x11 libasound2-plugins libasound2-dev libasound2

      - name: Set up ~/.asoundrc
        run: |
          chmod +x .github/workflows/scripts/setup_asoundrc.sh
          .github/workflows/scripts/setup_asoundrc.sh

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install rpaudio
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall

      - name: Install test dependencies
        run: |
          pip install pytest pytest-asyncio pytest-json-report

      - name: Run Pytest
        run: |
          pytest -v --json-report --json-report-file=tests/report.json

      - name: Upload modified README
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git status

          # Check if README.md has changes
          if git diff --quiet README.md; then
            echo "No changes to README.md, skipping commit."
          else
            git add README.md
            git commit -m "generated README badges from GitHub Action"
            git push
          fi

  windows:
    runs-on: windows-latest
    needs: mock-audio-and-run-tests
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m Cargo.toml
      - name: Install built wheel
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall
          python -c "import rpaudio"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.target }}
          path: dist/

  linux:
    runs-on: ubuntu-latest
    needs: mock-audio-and-run-tests
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
          before-script-linux: |
            yum install -y alsa-lib-devel pkgconfig alsa-utils

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall

      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall
          python -c "import rpaudio"
      - name: List contents of dist/
        run: ls -R dist/
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.target }}
          path: dist/

  macos:
    runs-on: macos-13
    needs: mock-audio-and-run-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist -m Cargo.toml
      - name: Install built wheel - x86_64
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall
          python -c "import rpaudio"
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release --out dist -m Cargo.toml
      - name: Install built wheel - universal2
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall
          python -c "import rpaudio"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: mac-${{ matrix.target }}
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs:
      - linux
      - windows
      - macos

    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten wheel directory structure
        run: |
          # Find and move all .whl files to the root dist directory
          find dist -type f -name "*.whl" -exec mv {} dist/ \;
          #  remove now empty subdirectories
          find dist -type d -empty -delete

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Move dist directory temporarily
        run: |
          mv dist ../dist_temp

      - uses: actions/checkout@v4
      - name: Determine TWINE_PASSWORD
        run: |
          chmod +x .github/workflows/scripts/set-twine-secret.sh
          .github/workflows/scripts/set-twine-secret.sh

      - name: Move dist directory back
        run: |
          mv ../dist_temp dist

      - name: Publish to PyPI
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        working-directory: dist
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *.whl
