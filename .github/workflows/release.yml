name: Release to PyPI

on:
  push:
    branches:
      - main
      - experimental
    tags:
      - 'v*'

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      # - name: Set up Python 3.8
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: 3.8
          
      # - uses: actions/cache@v4
      #   name: Configure pip caching
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-
            
      # - name: Set up virtual environment
      #   run: |
      #     python -m venv .venv

      # - name: Install Python dependencies
      #   run: |
      #     .venv\Scripts\Activate.ps1
      #     python -m pip install --upgrade pip
      #     pip install .[test]

      # - name: Install Rust
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     override: true

      # - name: Build and install package in develop mode
      #   run: |
      #     .venv\Scripts\Activate.ps1
      #     maturin develop

      - name: Install DevCon using Chocolatey
        shell: powershell
        run: |
          choco install devcon.portable -y

      - name: Check DevCon Directory
        shell: powershell
        run: |
          Get-ChildItem -Path C:\ProgramData\chocolatey\lib\devcon.portable -Recurse

      - name: Set Execution Policy
        shell: powershell
        run: |
          Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force

      - name: Install Scream
        shell: powershell
        run: |
          $currentDir = Get-Location
          Start-Service audio*
          Invoke-WebRequest https://github.com/duncanthrax/scream/releases/download/3.6/Scream3.6.zip -OutFile C:\Scream3.6.zip
          Expand-Archive -Path C:\Scream3.6.zip -DestinationPath C:\Scream -Force
          $cert = (Get-AuthenticodeSignature C:\Scream\Install\driver\Scream.sys).SignerCertificate
          $store = [System.Security.Cryptography.X509Certificates.X509Store]::new("TrustedPublisher", "LocalMachine")
          $store.Open("ReadWrite")
          $store.Add($cert)
          $store.Close()
          $devconPath = "C:\ProgramData\chocolatey\lib\devcon.portable"  # Update this path based on findings
          & $devconPath install C:\Scream\Install\driver\Scream.inf *Scream
          Set-Location -Path $currentDir

      - name: Print Audio Device
        shell: powershell
        run: Get-CimInstance Win32_SoundDevice | fl *

        
      - name: Run Tests
        run: |
          .venv\Scripts\Activate.ps1
          pytest --maxfail=1 --disable-warnings -q

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1.44.0
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m Cargo.toml
      - name: Install built wheel
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall
          python -c "import rpaudio"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
          before-script-linux: |
            yum install -y alsa-lib-devel pkgconfig
      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall
          python -c "import rpaudio"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-13
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1.44.0
        with:
          target: x86_64
          args: --release --out dist --sdist -m Cargo.toml
      - name: Install built wheel - x86_64
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall
          python -c "import rpaudio"
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1.44.0
        with:
          target: universal2-apple-darwin
          args: --release --out dist -m Cargo.toml
      - name: Install built wheel - universal2
        run: |
          pip install rpaudio --no-index --find-links dist --force-reinstall
          python -c "import rpaudio"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
  
  release:
    runs-on: ubuntu-latest
    needs: 
      - linux
      - windows
      - macos
    
    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      
      - uses: actions/checkout@v4
      - name: Determine TWINE_PASSWORD
        run: |
          chmod +x .github/workflows/scripts/set-twine-secret.sh
          .github/workflows/scripts/set-twine-secret.sh

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
